{"version":3,"sources":["components/Button/Button.jsx","App.js","index.js"],"names":["Button","className","clickHandler","label","type","cn","onClick","defaultProps","goodsFromServer","App","state","goods","reduce","goodsObj","good","addGood","setState","removeGood","clearSelection","Object","keys","getSelectedGoodsString","entries","filter","map","total","this","Jam","haveSelectedGoods","values","some","v","isSelected","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8TAMaA,G,YAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,MAA5B,OACpB,4BACEC,KAAK,SACLH,UAAWI,IAAG,MAAOJ,GACrBK,QAASJ,GAERC,KAULH,EAAOO,aAAe,CACpBN,UAAW,GACXE,MAAO,IClBT,IAAMK,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0GaC,E,4MAtGbC,MAAQ,CACNC,MAAOH,EAAgBI,QAAO,SAACC,EAAUC,GAAX,mBAAC,eAC1BD,GADyB,kBAE3BC,GAAO,MACN,K,EAYNC,QAAU,SAACD,GACT,EAAKE,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAM,2BACDD,EAAMC,OADN,kBAEFG,GAAO,S,EAKdG,WAAa,SAACH,GACZ,EAAKE,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAM,2BACDD,EAAMC,OADN,kBAEFG,GAAO,S,EAKdI,eAAiB,WACf,EAAKF,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAOQ,OAAOC,KAAKV,EAAMC,OAAOC,QAAO,SAACC,EAAUC,GAAX,mBAAC,eACnCD,GADkC,kBAEpCC,GAAO,MACN,S,EAIRO,uBAAyB,SAAAV,GAAK,OAC5BQ,OAAOG,QAAQX,GACZY,QAAO,0CACPC,KAAI,0CACJZ,QAAO,SAACa,EAAOX,GAAR,iBAAqBW,EAArB,aAA+BX,O,uDAxC3C,WACEY,KAAKV,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAM,2BACDD,EAAMC,OADN,IAEHgB,KAAK,U,oBAuCX,WAAU,IAAD,OACChB,EAAUe,KAAKhB,MAAfC,MACFiB,EAAoBT,OAAOU,OAAOlB,GAAOmB,MAAK,SAAAC,GAAC,OAAIA,KAEzD,OACE,yBAAK9B,UAAU,OACb,4BAAQA,UAAU,eACd2B,GACA,kBAAC,EAAD,CACE1B,aAAc,WACZ,EAAKgB,kBAEPf,MAAM,MAGV,wBAAIF,UAAU,cAEV2B,EAAiB,0BACMF,KAAKL,uBAAuBV,IAC/C,sBAIV,wBAAIV,UAAU,aACXkB,OAAOG,QAAQX,GAAOa,KAAI,mCAAEV,EAAF,KAAQkB,EAAR,YACzB,wBACEC,IAAKnB,EACLb,UAAWI,IACT,kBACA2B,GAAc,8BAGflB,EACD,kBAAC,EAAD,CACEb,UAAU,oBACVC,aAAc,WACR8B,EACF,EAAKf,WAAWH,GAEhB,EAAKC,QAAQD,IAGjBX,MAAO6B,EAAa,SAAW,kB,GA7F7BE,IAAMC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.aac3ac6b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Button.scss';\n\nexport const Button = ({ className, clickHandler, label }) => (\n  <button\n    type=\"button\"\n    className={cn('btn', className)}\n    onClick={clickHandler}\n  >\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n  label: '',\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { Button } from './components/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer.reduce((goodsObj, good) => ({\n      ...goodsObj,\n      [good]: false,\n    }), {}),\n  };\n\n  componentDidMount() {\n    this.setState(state => ({\n      goods: {\n        ...state.goods,\n        Jam: true,\n      },\n    }));\n  }\n\n  addGood = (good) => {\n    this.setState(state => ({\n      goods: {\n        ...state.goods,\n        [good]: true,\n      },\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(state => ({\n      goods: {\n        ...state.goods,\n        [good]: false,\n      },\n    }));\n  }\n\n  clearSelection = () => {\n    this.setState(state => ({\n      goods: Object.keys(state.goods).reduce((goodsObj, good) => ({\n        ...goodsObj,\n        [good]: false,\n      }), {}),\n    }));\n  };\n\n  getSelectedGoodsString = goods => (\n    Object.entries(goods)\n      .filter(([, isSelected]) => isSelected)\n      .map(([good]) => good)\n      .reduce((total, good) => ` ${total}, ${good}`)\n  );\n\n  render() {\n    const { goods } = this.state;\n    const haveSelectedGoods = Object.values(goods).some(v => v);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          { haveSelectedGoods && (\n            <Button\n              clickHandler={() => {\n                this.clearSelection();\n              }}\n              label=\"X\"\n            />\n          )}\n          <h1 className=\"App__title\">\n            {\n              haveSelectedGoods\n                ? `Selected goods: ${this.getSelectedGoodsString(goods)}`\n                : 'No goods selected'\n            }\n          </h1>\n        </header>\n        <ul className=\"GoodsList\">\n          {Object.entries(goods).map(([good, isSelected]) => (\n            <li\n              key={good}\n              className={cn(\n                'GoodsList__item',\n                isSelected && 'GoodsList__item--selected',\n              )}\n            >\n              {good}\n              <Button\n                className=\"GoodsList__button\"\n                clickHandler={() => {\n                  if (isSelected) {\n                    this.removeGood(good);\n                  } else {\n                    this.addGood(good);\n                  }\n                }}\n                label={isSelected ? 'Remove' : 'Add'}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}